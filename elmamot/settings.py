"""
Django settings for elmamot project.

Generated by 'django-admin startproject' using Django 3.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = os.environ.get('SECRET_DJANGO_KEY'
 # SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True 

ALLOWED_HOSTS = ['prozesh.ir', '127.0.0.1']
ALLOW_UNICODE_SLUGS = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # sitemap 
    'django.contrib.sitemaps',  
    # ck
    # user Visits 
    'user_visit',
    'ckeditor',
    'ckeditor_uploader',
    # Graphene 
    'graphene_django',
    # Forms
    'crispy_forms',
    # Rest 
    'rest_framework',
    # History
    #'simple_history',
    # Tag
    'taggit',
    'account',
    'language',
    'quiz',
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # ADDED ##############
    # User Interactions 
    'user_visit.middleware.UserVisitMiddleware',
    # LEAKED PASSWORDS 
    'pwned_passwords_django.middleware.PwnedPasswordsMiddleware',



]



# Authentication 
AUTH_PASSWORD_VALIDATORS = [
        {
        'NAME':'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length':8}
        },
        {
        'NAME': 'account.validators.ConsecutivelyRepeatingCharacterValditor',   
        'OPTIONS': {'length':5}
        },
        {
        'NAME': 'account.validators.ConsecutivelyIncreasingIntegarValidator',   
        'OPTIONS': {'length':4}
        },
        {
        'NAME': 'account.validators.ConsecutivelyDecreasingIntegerValidator',   
        'OPTIONS': {'length':4}
        },
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'account.validators.ContextValidator'
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'
        },
        {
            'NAME':'pwned_passwords_django.validators.PwnedPasswordsValidator',
            'OPTIONS': {'error_message': ('این رمز عبور قبلا هک شده بوده. برای اطلاعات بیشتر /n https://haveibeenpwned.com/ /n  یک سری بزنید')}
        }
]



ROOT_URLCONF = 'elmamot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'elmamot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'prozeshi_prozesh',
        'USER': 'prozeshi_alireza',
        'PASSWORD':os.environ.get('SECRET_DJANGO_DB_KEY'),
        'HOST':'localhost',
        'PORT':5432
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# AUTHENTICATION STUFF
LOGIN_REDIRECT_URL = 'langauge:home'
LOGOUT_URL = 'langauge:home'

#### EMIAL STUFF
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_PORT = 587
EMAIL_USE_TLS = True


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = [
    ('language',os.path.join(BASE_DIR, 'static'))
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


##### MEDIA
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')



AUTH_USER_MODEL = 'account.MyUser'
########### THIRD PARTY

## CKEDITOR
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"

CKEDITOR_UPLOAD_PATH = "uploads/images"
CKEDITOR_CONFIGS = {
    # django-ckeditor defaults
    'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'Preview', '-']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            {'name': 'forms',
             'items': ['Button', 'ImageButton',]},
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-',  'Indent', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            {'name': 'insert',
             'items': ['Image',  'Table', 'HorizontalRule', 'Smiley']},
            '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',

            ]},
        ],
    

    'default': {
        'toolbar': 'full',
       'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        
        'height': 400,
        'width': '100%', 
       # 'filebrowserWindowHeight': 725,
        #'filebrowserWindowWidth': 940,
        #'toolbarCanCollapse': True,
        'tabSpaces': 4,
        #'skin': 'monoo',
        # Toolbar Style
        # Add Code Block Plug-ins
        'extraPlugins': ','.join(['codesnippet',]),
    },
    # This blongs to the Blog section
    'comments_bro':{
        'toolbar':'Basic',
        'tabSpaces': 4,
        'height': 300,
        'width': 500,
        # Add Code Block Plug-ins
        'extraPlugins': ','.join(['codesnippet',]),
    }
}
sentry_sdk.init(
    dsn="https://32cf23e70cde4c648e03f24d9a269e80@o450156.ingest.sentry.io/5434338",
    integrations=[DjangoIntegration()],
    traces_sample_rate=1.0,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True
)


# Crispy Forms

CRISPY_TEMPLATE_PACK = 'bootstrap4'


if not DEBUG:
    SECURE_SSL_REDIRECT = True 
    
    
    
# GRAPHQL 

GRAPHENE = {
    'SCHEMA': 'elmamot.schema.schema',
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
    ],

}



# DRF #
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}
